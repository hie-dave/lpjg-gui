using Microsoft.Extensions.Logging;

namespace LpjGuess.Core.Logging;

/// <summary>
/// A filter for a log message generated by a particular component.
/// </summary>
public class LogFilter
{
    /// <summary>
    /// The filter string which matches the affected classes.
    /// </summary>
    public string Category { get; private init; }

    /// <summary>
    /// The log level.
    /// </summary>
    public LogLevel Level { get; private init; }

    /// <summary>
    /// Initialize a new instance of the <see cref="LogFilter"/> class.
    /// </summary>
    /// <param name="filter">The filter string which matches the affected classes.</param>
    /// <param name="level">The log level.</param>
    public LogFilter(string filter, LogLevel level)
    {
        Category = filter;
        Level = level;
    }

    /// <summary>
    /// Parse a log filter string.
    /// </summary>
    /// <param name="filter">The filter string.</param>
    /// <returns>The parsed log filter.</returns>
    public static LogFilter Parse(string filter)
    {
        string[] parts = filter.Split('=');
        if (parts.Length != 2)
            throw new ArgumentException($"Invalid log filter format: {filter}");

        string category = parts[0];
        LogLevel level = Enum.Parse<LogLevel>(parts[1], true);
        return new LogFilter(category, level);
    }
}
