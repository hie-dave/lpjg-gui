namespace LpjGuess.Frontend.Classes;

/// <summary>
/// Represents an instruction file generated by an experiment.
/// </summary>
public class InstructionFile : IEquatable<InstructionFile>
{
    /// <summary>
    /// The name of the experiment.
    /// </summary>
    public string ExperimentName { get; private init; }

    /// <summary>
    /// The name of the simulation.
    /// </summary>
    public string SimulationName { get; private init; }

    /// <summary>
    /// The path to the instruction file.
    /// </summary>
    public string FileName { get; private init; }

    /// <summary>
    /// Create a new <see cref="InstructionFile"/> instance.
    /// </summary>
    /// <param name="fileName">Path to the instruction file.</param>
    /// <param name="experimentName">Name of the experiment.</param>
    /// <param name="simulationName">Name of the simulation.</param>
    public InstructionFile(string fileName, string experimentName, string simulationName)
    {
        FileName = fileName;
        ExperimentName = experimentName;
        SimulationName = simulationName;
    }

    /// <inheritdoc />
    public bool Equals(InstructionFile? other)
    {
        if (other == null)
            return false;

        return FileName == other.FileName &&
               ExperimentName == other.ExperimentName &&
               SimulationName == other.SimulationName;
    }

    /// <inheritdoc />
    public override bool Equals(object? obj)
    {
        if (obj is not InstructionFile other)
            return false;

        return Equals(other);
    }

    /// <inheritdoc />
    public override int GetHashCode()
    {
        return HashCode.Combine(FileName, ExperimentName, SimulationName);
    }
}
